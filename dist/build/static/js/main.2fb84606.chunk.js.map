{"version":3,"sources":["images/landing.png","components/common/Section.js","helpers/check.js","components/placas/PicoYPlacaForm.js","components/placas/NexBlocking.js","components/placas/Placa.js","containers/placas/PlacasQueries.js","components/placas/Consultas.js","containers/placas/PlacasPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Section","props","style","padding","borderBottom","children","rules","day","endings","auxCheck","before","after","hour","beforeTime","moment","afterTime","isBetween","checkBlocked","placa","fecha","dayOfWeek","endingPlaca","charAt","length","checkDay","find","item","parseInt","checkHour","checkHours","PicoYPlacaForm","setVisible","setResponse","handleSubmit","useState","setPlaca","format","setFecha","Date","hora","setHora","onSubmit","e","preventDefault","newObj","isLocked","console","log","placeholder","value","onChange","target","time","htmlType","NexBlocking","nexDate","endingsByPlaca","calculateNextDay","Placa","placaStr","substring","placaEnding","Container","PlacaBox","Title","PlacaText","fontWeight","styled","div","span","CREATE_CONSULTA","gql","GET_CONSULTAS","Consultas","consultas","data","loading","error","itemLayout","dataSource","GetConsultas","renderItem","Item","Meta","title","href","description","color","PlacasPage","locale","response","visible","consultasState","useQuery","useMutation","createConsulta","xs","sm","md","lg","display","justifyContent","src","LadingImage","width","consulta","variables","then","onCompleted","refetch","catch","err","onCancel","footer","key","type","onClick","message","showIcon","client","ApolloClient","uri","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2fb84606.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing.6e810a12.png\";","import React from 'react'\n\nconst Section = (props) => {\n    return (\n        <div style={{\n            padding:'.9em', \n            borderBottom:`1px solid #f5f5f5` ,  \n        }}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Section\n","import moment from 'moment';\n\nconst format = 'hh:mm';\n\nconst rules = [\n  {\n    day:1,\n    endings:[1, 2]\n  },\n  {\n    day:2,\n    endings:[3, 4]\n  },\n  {\n    day:3,\n    endings:[5, 6]\n  },\n  {\n    day:4,\n    endings:[7, 8]\n  },\n  {\n    day:5,\n    endings:[9, 20]\n  }\n]\n\n\nconst auxCheck =(before, after, hour)=>{\n  const beforeTime = moment(before, format);\n  const afterTime = moment(after, format);\n  return moment(hour, format).isBetween(beforeTime,afterTime);\n}\nconst checkHours = (hour) => {\n    return  auxCheck('6:59','9:31', hour) || auxCheck('15:59','19:31', hour) ;\n}\nconst checkBlocked = (placa, fecha, hour) => {\n  const momentDate = moment(fecha);\n  const dayOfWeek = momentDate.day();\n    \n  if(dayOfWeek === 0 || dayOfWeek === 6 ) {return false} \n  const endings = rules[dayOfWeek-1].endings;\n  const endingPlaca = placa.charAt(placa.length - 1);\n  const dayLocked = endings.find((item) => {\n     return item === parseInt(endingPlaca, 0)\n  });\n\n  \n  const checkDay =  dayLocked ? true: false;\n  const checkHour = checkHours(hour);\n  return checkDay && checkHour\n}\n\n\nconst calculateNextDay = placa => {\n  let endingPlaca = placa.charAt(placa.length - 1);\n      endingPlaca = parseInt(endingPlaca, 0)\n    const endingsByPlaca = rules.find((item) => {\n    return item.endings[0] === endingPlaca || item.endings[1] === endingPlaca \n    });\n    \n   const closestDate =   moment().day(endingsByPlaca.day+7)\n   return closestDate;\n};\n\n\n\nexport { checkBlocked,calculateNextDay }\n\n\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport { Input, Button } from 'antd'\nimport { checkBlocked } from '../../helpers/check';\nimport Section from '../common/Section';\n\nimport { TimePicker } from 'antd';\nimport moment from 'moment';\nconst hourFormat = 'HH:mm';\n\n\nconst PicoYPlacaForm = ({ setVisible ,setResponse, handleSubmit}) => {\n    const [placa, setPlaca] = useState('PCB1046');\n    const [fecha, setFecha] = useState(moment().format('YYYY/MM/DD'));\n    const [hora, setHora] = useState(moment(new Date(), hourFormat));\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const newObj = {\n            placa,\n            fecha:fecha,\n            hora: moment(hora).format('HH:mm'),\n            isLocked: checkBlocked(placa, fecha, hora)\n        }\n    \n       console.log(newObj);\n        setVisible(true)\n        setResponse(newObj);\n        handleSubmit(newObj);\n    }\n\n\n    return (\n        <form onSubmit={onSubmit}>\n\n            <Section>\n                <Input placeholder=\"Placa\"\n                    value={placa}\n                    onChange={e => setPlaca(e.target.value)}\n                />\n            </Section>\n            <Section>\n                <Input placeholder=\"Fecha\"\n                    value={fecha}\n                    onChange={e => setFecha(e.target.value)}\n                />\n            </Section>\n            <Section>\n                <TimePicker\n                    value={hora}\n                    onChange={time => setHora(time)}\n                    format={hourFormat}\n                />\n            </Section>\n\n            <Section>\n                <Button htmlType=\"submit\">\n                    Consultar\n            </Button>\n\n            </Section>\n\n        </form>\n    )\n}\n\nexport default PicoYPlacaForm\n","import React from 'react'\nimport { Tag } from 'antd';\nimport moment from 'moment';\nimport { calculateNextDay } from '../../helpers/check';\nconst NexBlocking = ({ placa }) => {\n\n    const nexDate = calculateNextDay(placa)\n    return (\n        <div>\n           Bloqueo más cercano:   {moment(nexDate).format('dddd DD/MM/YYYY')}\n        </div>\n    )\n}\n\nexport default NexBlocking;\n\n","import React from 'react'\nimport styled from 'styled-components';\n\nconst Placa = ({ placa }) => {\n    const placaStr = placa.substring(0, placa.length - 1)\n    const placaEnding = placa.charAt(placa.length - 1)\n\n    return (\n\n\n            <Container>\n            <PlacaBox>\n                <Title>ECUADOR</Title>\n                <PlacaText>\n                    {placaStr}<span style={{fontWeight:700}}>{placaEnding}</span>\n                </PlacaText>\n                \n            </PlacaBox>\n        </Container>\n        \n        \n       \n\n    )\n}\n\nexport default Placa\n\nconst Container = styled.div`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    /* padding:.9em; */\n`\n\n\nconst PlacaBox = styled.div`\n    display:flex;\n    flex-direction:column;\n    text-align: center;\n    border-radius:12px;\n    width:100%;\n\n    @media only screen and  (min-width: 0)   and (max-width: 480px)  {\n        width:60%;\n    }\n    @media only screen and  (min-width: 480px)   and (max-width: 576px)  {\n        width:60%;\n    }\n    @media only screen and  (min-width: 576px)   and (max-width: 768px)  {\n        width:60%;\n    }\n    @media only screen and  (min-width: 768px)    {\n        width:60%;\n    }\n\n     \n`\n\n\n\nconst Title = styled.span`\n  border-radius:9px 9px 0 0;\n  flex:1;\n  font-size: .9rem;\n  background-color:#000000;\n  border: 3px solid #000000;\n  color:#ffffff;\n  padding:.21rem;\n`;\n\n\nconst PlacaText = styled.span`\n  border-radius:0 0 9px 9px;\n  flex:3;\n  font-size: 1.8rem;\n  background-color:#fafafc;\n  border-bottom: 3px solid #000000;\n  border-left: 3px solid #000000;\n  border-right: 3px solid #000000;\n  padding:.21em;\n\n`;\n\n","import { gql } from 'apollo-boost';\n\nconst CREATE_CONSULTA = gql`\nmutation(\n  $placa: String!\n  $fecha: String!\n  $hora: String!\n  $isLocked: Boolean!\n) {\n    CreateConsulta(\n        placa: $placa\n        fecha: $fecha\n        hora: $hora\n        isLocked: $isLocked\n    ) {\n        id\n        placa\n        fecha\n        hora\n    }\n}`\n\nconst GET_CONSULTAS = gql`{\n        GetConsultas{\n            id,\n            placa,\n            fecha,\n            hora,\n            isLocked\n        }\n}`\n\n\nexport {CREATE_CONSULTA, GET_CONSULTAS}\n\n","import React from 'react'\nimport { List, Badge } from 'antd';\nimport { Tag } from 'antd';\nimport Section from '../common/Section';\n\nconst Consultas = (props) => {\n    const { data, loading, error } = props.consultas;\n    debugger\n    return (\n        <>\n\n        <Section>\n        <h1>\n        Ultimas Consultas\n    </h1>\n        </Section>\n\n        <List\n            itemLayout=\"horizontal\"\n            dataSource={data && data.GetConsultas}\n            loading={loading && loading}\n            renderItem={item => (\n                <List.Item style={{padding:'1em'}}>\n                    <List.Item.Meta\n                        title={<a href=\"https://ant.design\">{item.placa}</a>}\n                        description={`${item.fecha} - ${item.hora}`}\n                    />\n\n                    {\n                        item.isLocked ? <Tag color=\"red\">locked</Tag> : <Tag color=\"green\">free</Tag>\n                    }\n\n                </List.Item>\n            )}\n        />\n\n        </>\n    )\n}\n\nexport default Consultas\n","import React, { useState } from 'react'\nimport { Row, Col } from 'antd';\nimport { Modal, Button, Alert } from 'antd';\nimport moment from 'moment';\nimport 'moment/locale/es'\n\nimport Section from '../../components/common/Section';\nimport PicoYPlacaForm from '../../components/placas/PicoYPlacaForm';\nimport NexBlocking from '../../components/placas/NexBlocking';\nimport Placa from '../../components/placas/Placa';\nimport LadingImage from '../../images/landing.png';\nimport { useMutation, useQuery } from '@apollo/react-hooks';\nimport { CREATE_CONSULTA, GET_CONSULTAS } from './PlacasQueries'\nimport Consultas from '../../components/placas/Consultas';\n\n\nconst PlacasPage = (props) => {\n  moment.locale('es')\n  const [response, setResponse] = useState(null);\n  const [visible, setVisible] = useState(false);\n\n  const consultasState = useQuery(GET_CONSULTAS);\n  const [createConsulta] = useMutation(CREATE_CONSULTA,);\n\n  const onCompleted =()=> {\n    alert('some')\n  }\n\n  const handleSubmit = (consulta) => {\n    createConsulta({ variables: consulta })\n      .then(({ data, onCompleted}) => {\n        consultasState.refetch();\n      })\n      .catch(err => console.log(err));\n  }\n\n\n  \n\n  return (\n    <>\n      <Section>\n        <h1>\n          Consulta tu pico y placa\n        </h1>\n      </Section>\n\n      <Row>\n        <Col xs={24} sm={24} md={12} lg={12} style={{ display: \"flex\", justifyContent: 'center' }} >\n          <img src={LadingImage} style={{ width: \"72%\" }}></img>\n        </Col>\n        <Col xs={24} sm={24} md={12} lg={12} >\n          <PicoYPlacaForm\n            setVisible={setVisible}\n            setResponse={setResponse}\n            handleSubmit={handleSubmit}\n          />\n        </Col>\n      </Row>\n\n      <Row>\n        <Consultas consultas={consultasState}></Consultas>\n      </Row>\n      <Modal visible={visible} onCancel={() => setVisible(false)}\n        footer={\n          <Button key=\"submit\" type=\"primary\" onClick={() => setVisible(false)}>\n            Regresar\n        </Button>}\n\n      >\n        {\n          response &&\n          <>\n            <Section> <Placa placa={response.placa}></Placa></Section>\n            <Section>\n              {`Consulta: ${moment(response.fecha).format('dddd DD/MM/YYYY')} ${response.hora}`}\n            </Section>\n            <Section>\n              {\n                !response.isLocked\n                  ? <Alert message=\"Puede circular\" type=\"success\" showIcon />\n                  : <Alert message=\"No puede circular\" type=\"error\" showIcon />\n              }\n            </Section>\n            <Section>\n              <NexBlocking placa={response.placa} />\n            </Section>\n          </>\n        }\n      </Modal>\n    </>\n  )\n}\n\nexport default PlacasPage\n","import React , {useState}from 'react'\nimport 'antd/dist/antd.css';\nimport './App.css'\nimport PlacasPage from './containers/placas/PlacasPage';\n\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport ApolloClient from 'apollo-boost';\nconst client = new ApolloClient({\n  uri: '/graphql',\n});\n\n\nconst App = () => {\n\n  return (\n    \n    <ApolloProvider client={client}>\n\n      <PlacasPage/>\n      </ApolloProvider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}